version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - BACKEND_API_KEY=${BACKEND_API_KEY:-}
      - RATE_LIMIT_IMAGE=${RATE_LIMIT_IMAGE:-10}
      - RATE_LIMIT_TEXT=${RATE_LIMIT_TEXT:-30}
      - RATE_LIMIT_AUDIO=${RATE_LIMIT_AUDIO:-20}
      - CACHE_TTL_IMAGE=${CACHE_TTL_IMAGE:-3600}
      - CACHE_TTL_TEXT=${CACHE_TTL_TEXT:-300}
      - CACHE_TTL_AUDIO=${CACHE_TTL_AUDIO:-3600}
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_APP_URL=http://localhost:3005
      - NEXT_PUBLIC_API_KEY=${BACKEND_API_KEY:-}
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  node_modules:
  next_cache:

networks:
  default:
    driver: bridge
